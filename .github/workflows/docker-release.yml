name: Docker Build and Release

on:
  push:
    tags:
      - 'v*' # 匹配以 v 开头的标签，例如 v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false  # 不推送到任何registry
        load: true
        tags: py-sandbox:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Export Docker image to tar
      run: |
        docker images
        docker save -o Docker-py-sandbox-${{ github.ref_name }}.tar.gz py-sandbox:${{ github.ref_name }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Docker image to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Docker-py-sandbox-${{ github.ref_name }}.tar.gz
        asset_name: py-sandbox-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

    - name: Clean up
      run: |
        rm -f Docker-py-sandbox-${{ github.ref_name }}.tar.gz